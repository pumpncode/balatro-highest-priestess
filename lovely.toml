[manifest]
version = "1.0.0"
dump_lua = true
priority = -1


# Poker Hand display can have enhancements
# This patch was made by MathIsFun0
# https://github.com/MathIsFun0/Cryptid/blob/00bdde94b2aa4554147c65a792d404585dde167c/lovely/Misc.toml#L394
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''local card = Card(0,0, 0.5*G.CARD_W, 0.5*G.CARD_H, G.P_CARDS[v[1]], G.P_CENTERS.c_base)'''
position = "at"
payload = '''local card = Card(0,0, 0.5*G.CARD_W, 0.5*G.CARD_H, G.P_CARDS[v[1]], G.P_CENTERS[v[3] or 'c_base'])'''
match_indent = true


# Multiscoring
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''local unsplashed = SMODS.never_scores(G.play.cards[i])'''
position = "after"
payload = '''
local vhp_multiscoring_times = 0
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''if card == G.play.cards[i] then splashed = true end'''
position = "after"
payload = '''
if card == G.play.cards[i] then
    vhp_multiscoring_times = vhp_multiscoring_times + 1
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''if splashed and not unsplashed then table.insert(final_scoring_hand, G.play.cards[i]) end'''
position = "after"
payload = '''
if splashed and not unsplashed then
    for _ = 1, vhp_multiscoring_times - 1, 1 do
        table.insert(final_scoring_hand, G.play.cards[i])
    end
end
'''
match_indent = true

[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = '''
function SMODS.calculate_main_scoring(context, scoring_hand)
    for _, card in ipairs(context.cardarea.cards) do
'''
position = "at"
payload = '''
function SMODS.calculate_main_scoring(context, scoring_hand)
    --print(#context.cardarea.cards, #context.scoring_hand)
    for _, card in ipairs(G.FUNCS.vhp_get_real_context_cardarea_cards(context)) do
'''
match_indent = true


# Draw Extra
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''if G.GAME.blind.name == 'The Serpent' and'''
position = "before"
payload = '''
if G.GAME.vhp_draw_extra then
    hand_space = math.min(#G.deck.cards, hand_space + G.GAME.vhp_draw_extra)
    G.GAME.vhp_draw_extra = nil
end
'''
match_indent = true


# Scoring held in hand cards
[[patches]]
[patches.pattern]
target = "functions/state_events.lua"
pattern = '''scoring_hand = final_scoring_hand'''
position = "before"
payload = '''
-- Not yet
for _, vhp_card in pairs(scoring_hand) do
    if vhp_card.area == G.hand then
        table.insert(final_scoring_hand, vhp_card)
    end
end
'''
match_indent = true


# Omni Mult and Chips
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if not instant then'''
position = "before"
payload = '''
if G.GAME.omni_mult then
    G.GAME.hands[hand].mult = G.GAME.hands[hand].mult + G.GAME.omni_mult
end
if G.GAME.omni_chips then
    G.GAME.hands[hand].chips = G.GAME.hands[hand].chips + G.GAME.omni_chips
end
if G.GAME.omni_xmult then
    G.GAME.hands[hand].mult = G.GAME.hands[hand].mult * G.GAME.omni_xmult
end
'''
match_indent = true


# Polyhedra cards do not spawn if the type "Planet" is queued and the playstyle is silly
# Planet cards do not spawn if they have hand_type (vanilla behaviour, level up a single hand)
# Chance for replacement is done by hooking
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''if v.no_pool_flag and G.GAME.pool_flags[v.no_pool_flag] then add = nil end'''
position = "before"
payload = '''
if G.GAME and G.GAME.vhp_playstyle == "silly" and _type == "Planet" and v.pools and v.pools.Polyhedra then
    add = nil
end
if G.GAME and G.GAME.vhp_playstyle == "serious" and v.config.hand_type then
    add = nil
end
'''
match_indent = true


# Blind reward
[[patches]]
[patches.pattern]
target = "blind.lua"
pattern = '''self.dollars = blind and blind.dollars or 0'''
position = "after"
payload = '''
if G.GAME.vhp_blind_reward_extra then
    self.dollars = self.dollars + G.GAME.vhp_blind_reward_extra
end
'''
match_indent = true


# Faster level up
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = '''
G.E_MANAGER:add_event(Event({
    trigger = 'immediate',
    func = (function() check_for_unlock{type = 'upgrade_hand', hand = hand, level = G.GAME.hands[hand].level} return true end)
}))
'''
position = "before"
payload = '''
if G.vhp_faster_level_up and instant then
    return
end
'''
match_indent = true


# https://github.com/SpectralPack/Cryptid/blob/7013e708d82d75194dc0ee05ec7c724f9c665de1/lovely/lib_ui.toml#L9
# Search bar for poker hands
# [[patches]]
# [patches.pattern]
# target = '=[SMODS _ "src/overrides.lua"]'
# pattern = '''
# local hand_list = G.OVERLAY_MENU:get_UIE_by_ID('hand_list')
# '''
# position = "before"
# payload = '''
# G.FUNCS.vhp_add_search_bar_to_ui(object)
# '''
# match_indent = true
# [[patches]]
# [patches.pattern]
# target = '=[SMODS _ "src/overrides.lua"]'
# pattern = '''
# local t = {n = G.UIT.ROOT, config = {align = "cm", minw = 3, padding = 0.1, r = 0.1, colour = G.C.CLEAR}, nodes = {
# '''
# position = "before"
# payload = '''
# G.FUNCS.vhp_add_search_bar_to_ui(object)
# '''
# match_indent = true